{"version":3,"sources":["components/Login/Login.js"],"names":["maxLength16","maxLengthCreator","Input","InputCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","requiredField","className","s","rememberMe","formSummaryError","connect","state","isAuth","auth","login","props","to","formData","email","password"],"mappings":"uMASIA,EAAcC,YAAiB,IAG7BC,EAAQC,YAAa,SA8BrBC,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EA3BL,SAAC,GAAkC,IAAjCE,EAAgC,EAAhCA,aAAgC,IAAlBC,aAAkB,MAAZ,aAAY,EAChD,OAEI,uBAAMC,SAAUF,EAAhB,UACI,8BAEQG,YAAYC,IAAe,QAAS,QAAST,KAErD,8BACKQ,YAAY,CAACC,IAAeX,GAAa,WAAW,WAAWE,EAAM,cAE1E,sBAAKU,UAAWC,IAAEC,WAAlB,UACKJ,YAAY,KAAK,KAAK,aAAaR,EAAM,YAD9C,iBAICM,EAAQ,qBAAKI,UAAWC,IAAEE,iBAAlB,SACJP,IACI,KACT,8BACI,mDAkCDQ,uBAPS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,UAKa,CAACE,WAA1BJ,EAxBD,SAACK,GAKX,OAAIA,EAAMH,OACC,cAAC,IAAD,CAAUI,GAAI,aAIrB,gCACI,uCACA,cAAClB,EAAD,CAAgBK,SAXP,SAACc,GACdF,EAAMD,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAAST","file":"static/js/5.ad0ad448.chunk.js","sourcesContent":["import {React} from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\nimport {createField, InputCreator} from \"../common/FormsControls/FormsControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport s from '../common/FormsControls/FormsControls.module.css'\r\n\r\nlet maxLength16 = maxLengthCreator(16);\r\n\r\n\r\nconst Input = InputCreator('input');\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error=()=>{}}) => {\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                {\r\n                    createField(requiredField, 'email', 'email', Input)}\r\n            </div>\r\n            <div>\r\n                {createField([requiredField, maxLength16],'password','password',Input,'password')}\r\n            </div>\r\n            <div className={s.rememberMe}>\r\n                {createField(null,null,'rememberMe',Input,'checkbox')}remember me\r\n            </div>\r\n\r\n            {error ? <div className={s.formSummaryError}>\r\n                {error}\r\n            </div> : null}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}